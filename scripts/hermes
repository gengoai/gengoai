#!/bin/bash


SCRIPT_DIR=$(dirname "${BASH_SOUCE}")

if [[ "$SCRIPT_DIR" == "." ]]; then
  WORK_DIR=$(pwd)
else
  WORK_DIR=$(dirname "$(cd "$(dirname "${BASH_SOURCE}")" >/dev/null 2>&1 && pwd)")
fi

CLASSPATH='lib/*'

SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

PROGRAMS=(
    "corpus" "com.gengoai.hermes.tools.CorpusApp" "Application for working with corpora."
    "tagger" "com.gengoai.hermes.tools.TaggerApp" "Application for training sequence taggers."
    "gui" "com.gengoai.hermes.tools.swing.AnnotationGUI" "Annotate documents for a given task using a Swing-based gui."
    "workflow" "com.gengoai.hermes.tools.WorkflowApp" "Application to run user defined workflows."
    "workflow-actions" "com.gengoai.hermes.tools.ListWorkflowActions" "List available workflow actions."
)


function get_class() {
    hash_lookup "$1" "class"
}

function list_applications() {
      echo "============================================================================"
      echo "                       Applications available to run"
      echo "============================================================================"
      for ((i = 0; i < ${#PROGRAMS[@]}; i += 3)); do
          cmd=${PROGRAMS[$i]}
          class=${PROGRAMS[$i + 1]}
          description=${PROGRAMS[$i + 2]}
          echo "$cmd: $description"
      done

}

function hash_lookup() {
    for ((i = 0; i < ${#PROGRAMS[@]}; i += 3)); do
        cmd=${PROGRAMS[$i]}
        class=${PROGRAMS[$i + 1]}
        help=${PROGRAMS[$i + 2]}
        if [[ $cmd == "$1" ]]; then
            if [[ "$2" == "class" ]]; then
                echo "$class"
            else
                echo "$help"
            fi
            return
        fi
    done
    echo "$1"
}

if [ -z "$JAVA_OPTS" ]
then
	JAVA_OPTS="-Xmx8g"
fi

if [ -z "$HERMES_CONFIG" ]
then
	HERMES_CONFIG="$WORK_DIR/config.conf"
fi

if [ -z "$SPARK_HOME" ]
then
	SPARK_HOME="$WORK_DIR/spark/"
fi


function help() {
  echo "This is the help"
}

function run() {
  java "$JAVA_OPTS" -cp "$CLASSPATH" "$1" --config "$HERMES_CONFIG" "${@:2}"
}

function spark() {
  if [ "$1" == "LOCAL" ]; then
    java "$JAVA_OPTS" -cp "$CLASSPATH:spark/*" "$2"  "${@:3}" --config "$HERMES_CONFIG"
  else
    echo "DISTRIBUTED"
  fi
}


ACTION=$(echo "$1" | tr A-Z a-z)

case $ACTION in
    -ls | --ls)
      list_applications
      exit
      ;;
    spark)
      PROGRAM=$(echo "$2" | tr A-Z a-z)
      PROGRAM=$(find_program "$PROGRAM")
      spark "DISTRIBUTED" "$PROGRAM" "${@:3}"
      ;;
    spark-local)
      PROGRAM=$(echo "$2" | tr A-Z a-z)
      PROGRAM=$(find_program "$PROGRAM")
      spark "LOCAL" "$PROGRAM" "${@:3}"
      ;;
    help | -h | --help)
      help
      ;;
    *)
      PROGRAM=$(get_class "$ACTION")
      run "$PROGRAM" "${@:2}"
      ;;
esac


IFS=$SAVEIFS
